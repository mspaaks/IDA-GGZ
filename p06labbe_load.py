import pandas as pd
import numpy as np
from replace_missing import replace_missing 

# Loading the data
path_p06labbe13 = r'C:\Users\marij\OneDrive\Documenten\TM Jaar 2\TM Stage IDA\p06labbe13_2022-01-25.csv'
path_p06labbe14 = r'C:\Users\marij\OneDrive\Documenten\TM Jaar 2\TM Stage IDA\p06labbe14_2022-01-25.csv'
path_p06labbe15 = r'C:\Users\marij\OneDrive\Documenten\TM Jaar 2\TM Stage IDA\p06labbe15_2022-01-25.csv'
path_p06labbe16 = r'C:\Users\marij\OneDrive\Documenten\TM Jaar 2\TM Stage IDA\p06labbe16_2022-01-25.csv'
path_p06labbe18 = r'C:\Users\marij\OneDrive\Documenten\TM Jaar 2\TM Stage IDA\p06labbe18_2022-01-25.csv'

df_p06labbe13 = pd.read_csv(path_p06labbe13, sep=';')
df_p06labbe14 = pd.read_csv(path_p06labbe14, sep=';')
df_p06labbe15 = pd.read_csv(path_p06labbe15, sep=';')
df_p06labbe16 = pd.read_csv(path_p06labbe16, sep=';')
df_p06labbe18 = pd.read_csv(path_p06labbe18, sep=';')

# Dropping irrelevant columns 
df_p06labbe13 = df_p06labbe13.drop(columns={'gender', 'birth_year', 'roqua_id','hide_pii_from_researchers', 'hide_values_from_professionals', 'respondent_id', 'respondent_type', 'respondent_label','p06labbe13_id','p06labbe13_protocol','p06labbe13_project','p06labbe13_measurement','p06labbe13_notes', 'p06labbe13_location','p06labbe13_invited_at','p06labbe13_emailed_at','p06labbe13_open_from','p06labbe13_non_response','p06labbe13_compl_by', 'p06labbe13_started_at','p06labbe13_completed_at','p06labbe13_variant','p06labbe13_anonymous','p06labbe13_tri_i','p06labbe13_cho_i','p06labbe13_hdl_i','p06labbe13_ldl_i','p06labbe13_glu_i','p06labbe13_hb_i','p06labbe13_pro_i','p06labbe13_684','p06labbe13_792','p06labbe13_793','p06labbe13_797','p06labbe13_798','p06labbe13_802','p06labbe13_803','p06labbe13_807','p06labbe13_808','p06labbe13_812','p06labbe13_813','p06labbe13_1272','p06labbe13_1273','p06labbe13_1274','p06labbe13_1275','p06labbe13_1276','p06labbe13_1277','p06labbe13_1278','p06labbe13_1279','p06labbe13_1280','p06labbe13_1281','p06labbe13_872','p06labbe13_823','p06labbe13_824','p06labbe13_825','p06labbe13_817','p06labbe13_822','p06labbe13_842','p06labbe13_843','p06labbe13_844','p06labbe13_867','p06labbe13_873','p06labbe13_717','p06labbe13_718','p06labbe13_722','p06labbe13_723','p06labbe13_727','p06labbe13_728','p06labbe13_732','p06labbe13_733','p06labbe13_737','p06labbe13_738','p06labbe13_742','p06labbe13_767'})
df_p06labbe14 = df_p06labbe14.drop(columns={'gender', 'birth_year', 'roqua_id','hide_pii_from_researchers', 'hide_values_from_professionals', 'respondent_id', 'respondent_type', 'respondent_label','p06labbe14_id','p06labbe14_protocol','p06labbe14_project','p06labbe14_measurement','p06labbe14_notes', 'p06labbe14_location','p06labbe14_invited_at','p06labbe14_emailed_at','p06labbe14_open_from','p06labbe14_non_response','p06labbe14_compl_by', 'p06labbe14_started_at','p06labbe14_completed_at','p06labbe14_variant','p06labbe14_anonymous','p06labbe14_tri_i','p06labbe14_tri_n','p06labbe14_cho_i','p06labbe14_cho_n','p06labbe14_hdl_i','p06labbe14_hdl_n','p06labbe14_ldl_i','p06labbe14_ldl_n','p06labbe14_glu_i','p06labbe14_glu_n','p06labbe14_hb_i','p06labbe14_hb_n','p06labbe14_pro_i','p06labbe14_pro_n','p06labbe14_684','p06labbe14_792','p06labbe14_793','p06labbe14_797','p06labbe14_798','p06labbe14_802','p06labbe14_803','p06labbe14_807','p06labbe14_808','p06labbe14_812','p06labbe14_813','p06labbe14_1272','p06labbe14_1273','p06labbe14_1274','p06labbe14_1275','p06labbe14_1276','p06labbe14_1277','p06labbe14_1278','p06labbe14_1279','p06labbe14_1280','p06labbe14_1281','p06labbe14_1282','p06labbe14_1283','p06labbe14_1284','p06labbe14_1285','p06labbe14_1286','p06labbe14_1287','p06labbe14_1288','p06labbe14_1289','p06labbe14_1290','p06labbe14_1291','p06labbe14_872','p06labbe14_823','p06labbe14_824','p06labbe14_825','p06labbe14_817','p06labbe14_822','p06labbe14_842','p06labbe14_843','p06labbe14_844','p06labbe14_867','p06labbe14_873','p06labbe14_717','p06labbe14_718','p06labbe14_722','p06labbe14_723','p06labbe14_727','p06labbe14_728','p06labbe14_732','p06labbe14_733','p06labbe14_737','p06labbe14_738','p06labbe14_742','p06labbe14_767','p06labbe14_2000_dd','p06labbe14_2000_mm','p06labbe14_2000_yyyy','p06labbe14_2001','p06labbe14_2002'})
df_p06labbe15 = df_p06labbe15.drop(columns={'gender', 'birth_year', 'roqua_id','hide_pii_from_researchers', 'hide_values_from_professionals', 'respondent_id', 'respondent_type', 'respondent_label','p06labbe15_id','p06labbe15_protocol','p06labbe15_project','p06labbe15_measurement','p06labbe15_notes', 'p06labbe15_location','p06labbe15_invited_at','p06labbe15_emailed_at','p06labbe15_open_from','p06labbe15_non_response','p06labbe15_compl_by', 'p06labbe15_started_at','p06labbe15_completed_at','p06labbe15_variant','p06labbe15_anonymous','p06labbe15_tri_i','p06labbe15_tri_n','p06labbe15_cho_i','p06labbe15_cho_n','p06labbe15_hdl_i','p06labbe15_hdl_n','p06labbe15_ldl_i','p06labbe15_ldl_n','p06labbe15_glu_i','p06labbe15_glu_n','p06labbe15_hb_i','p06labbe15_hb_n','p06labbe15_pro_i','p06labbe15_pro_n','p06labbe15_684','p06labbe15_792','p06labbe15_793','p06labbe15_797','p06labbe15_798','p06labbe15_802','p06labbe15_803','p06labbe15_807','p06labbe15_808','p06labbe15_812','p06labbe15_813','p06labbe15_1272','p06labbe15_1273','p06labbe15_1274','p06labbe15_1275','p06labbe15_1276','p06labbe15_1277','p06labbe15_1278','p06labbe15_1279','p06labbe15_1280','p06labbe15_1281','p06labbe15_1282','p06labbe15_1283','p06labbe15_1284','p06labbe15_1285','p06labbe15_1286','p06labbe15_1287','p06labbe15_1288','p06labbe15_1289','p06labbe15_1290','p06labbe15_1291','p06labbe15_872','p06labbe15_823','p06labbe15_824','p06labbe15_825','p06labbe15_817','p06labbe15_822','p06labbe15_842','p06labbe15_843','p06labbe15_844','p06labbe15_867','p06labbe15_873','p06labbe15_717','p06labbe15_718','p06labbe15_722','p06labbe15_723','p06labbe15_727','p06labbe15_728','p06labbe15_732','p06labbe15_733','p06labbe15_737','p06labbe15_738','p06labbe15_742','p06labbe15_767','p06labbe15_2000_dd','p06labbe15_2000_mm','p06labbe15_2000_yyyy','p06labbe15_2001','p06labbe15_2002'})
df_p06labbe16 = df_p06labbe16.drop(columns={'gender', 'birth_year', 'roqua_id','hide_pii_from_researchers', 'hide_values_from_professionals', 'respondent_id', 'respondent_type', 'respondent_label','p06labbe16_id','p06labbe16_protocol','p06labbe16_project','p06labbe16_measurement','p06labbe16_notes', 'p06labbe16_location','p06labbe16_invited_at','p06labbe16_emailed_at','p06labbe16_open_from','p06labbe16_non_response','p06labbe16_compl_by', 'p06labbe16_started_at','p06labbe16_completed_at','p06labbe16_variant','p06labbe16_anonymous','p06labbe16_tri_i','p06labbe16_tri_n','p06labbe16_cho_i','p06labbe16_cho_n','p06labbe16_hdl_i','p06labbe16_hdl_n','p06labbe16_ldl_i','p06labbe16_ldl_n','p06labbe16_glu_i','p06labbe16_glu_n','p06labbe16_hb_i','p06labbe16_hb_n','p06labbe16_pro_i','p06labbe16_pro_n','p06labbe16_684','p06labbe16_792','p06labbe16_793','p06labbe16_797','p06labbe16_798','p06labbe16_802','p06labbe16_803','p06labbe16_807','p06labbe16_808','p06labbe16_812','p06labbe16_813','p06labbe16_1272','p06labbe16_1273','p06labbe16_1274','p06labbe16_1275','p06labbe16_1276','p06labbe16_1277','p06labbe16_1278','p06labbe16_1279','p06labbe16_1280','p06labbe16_1281','p06labbe16_1282','p06labbe16_1283','p06labbe16_1284','p06labbe16_1285','p06labbe16_1286','p06labbe16_1287','p06labbe16_1288','p06labbe16_1289','p06labbe16_1290','p06labbe16_1291','p06labbe16_872','p06labbe16_823','p06labbe16_824','p06labbe16_825','p06labbe16_817','p06labbe16_822','p06labbe16_842','p06labbe16_843','p06labbe16_844','p06labbe16_867','p06labbe16_873','p06labbe16_717','p06labbe16_718','p06labbe16_722','p06labbe16_723','p06labbe16_727','p06labbe16_728','p06labbe16_732','p06labbe16_733','p06labbe16_737','p06labbe16_738','p06labbe16_742','p06labbe16_767','p06labbe16_2000_dd','p06labbe16_2000_mm','p06labbe16_2000_yyyy','p06labbe16_2001','p06labbe16_2002'})
df_p06labbe18 = df_p06labbe18.drop(columns={'gender', 'birth_year', 'roqua_id','hide_pii_from_researchers', 'hide_values_from_professionals', 'respondent_id', 'respondent_type', 'respondent_label','p06labbe18_id','p06labbe18_protocol','p06labbe18_project','p06labbe18_measurement','p06labbe18_notes', 'p06labbe18_location','p06labbe18_invited_at','p06labbe18_emailed_at','p06labbe18_open_from','p06labbe18_non_response','p06labbe18_compl_by', 'p06labbe18_started_at','p06labbe18_completed_at','p06labbe18_variant','p06labbe18_anonymous','p06labbe18_tri_i','p06labbe18_tri_n','p06labbe18_cho_i','p06labbe18_cho_n','p06labbe18_hdl_i','p06labbe18_hdl_n','p06labbe18_ldl_i','p06labbe18_ldl_n','p06labbe18_glu_i','p06labbe18_glu_n','p06labbe18_hb_i','p06labbe18_hb_n','p06labbe18_pro_i','p06labbe18_pro_n','p06labbe18_684','p06labbe18_792','p06labbe18_793','p06labbe18_797','p06labbe18_798','p06labbe18_802','p06labbe18_803','p06labbe18_807','p06labbe18_808','p06labbe18_812','p06labbe18_813','p06labbe18_1272','p06labbe18_1273','p06labbe18_1274','p06labbe18_1275','p06labbe18_1276','p06labbe18_1277','p06labbe18_1278','p06labbe18_1279','p06labbe18_1280','p06labbe18_1281','p06labbe18_1282','p06labbe18_1283','p06labbe18_1284','p06labbe18_1285','p06labbe18_1286','p06labbe18_1287','p06labbe18_1288','p06labbe18_1289','p06labbe18_1290','p06labbe18_1291','p06labbe18_872','p06labbe18_823','p06labbe18_824','p06labbe18_825','p06labbe18_817','p06labbe18_822','p06labbe18_842','p06labbe18_843','p06labbe18_844','p06labbe18_867','p06labbe18_873','p06labbe18_717','p06labbe18_718','p06labbe18_722','p06labbe18_723','p06labbe18_727','p06labbe18_728','p06labbe18_732','p06labbe18_733','p06labbe18_737','p06labbe18_738','p06labbe18_742','p06labbe18_767','p06labbe18_2000_dd','p06labbe18_2000_mm','p06labbe18_2000_yyyy','p06labbe18_2001','p06labbe18_2002'})

df_p06labbe13 = df_p06labbe13.rename(columns={'p06labbe13_date': 'Date','p06labbe13_tri':'Trigly','p06labbe13_cho':'Chol','p06labbe13_hdl':'HDL','p06labbe13_ldl':'LDL','p06labbe13_glu':'Gluc','p06labbe13_hb':'HbA1c','p06labbe13_pro':'Prolac','p06labbe13_685':'Leuko','p06labbe13_690':'CRP','p06labbe13_695':'Ureum','p06labbe13_700':'Creat','p06labbe13_705':'ASAT','p06labbe13_715':'ALAT','p06labbe13_814':'25OH D','p06labbe13_815':'PTH','p06labbe13_772':'TSH','p06labbe13_816':'Osteo','p06labbe13_818':'Ctx','p06labbe13_777':'Homocysteïne'})
df_p06labbe14 = df_p06labbe14.rename(columns={'p06labbe14_date': 'Date','p06labbe14_tri':'Trigly','p06labbe14_cho':'Chol','p06labbe14_hdl':'HDL','p06labbe14_ldl':'LDL','p06labbe14_glu':'Gluc','p06labbe14_hb':'HbA1c','p06labbe14_pro':'Prolac','p06labbe14_685':'Leuko','p06labbe14_690':'CRP','p06labbe14_695':'Ureum','p06labbe14_700':'Creat','p06labbe14_705':'ASAT','p06labbe14_715':'ALAT','p06labbe14_814':'25OH D','p06labbe14_815':'PTH','p06labbe14_772':'TSH','p06labbe14_816':'Osteo','p06labbe14_818':'Ctx','p06labbe14_777':'Homocysteïne'})
df_p06labbe15 = df_p06labbe15.rename(columns={'p06labbe15_date': 'Date','p06labbe15_tri':'Trigly','p06labbe15_cho':'Chol','p06labbe15_hdl':'HDL','p06labbe15_ldl':'LDL','p06labbe15_glu':'Gluc','p06labbe15_hb':'HbA1c','p06labbe15_pro':'Prolac','p06labbe15_685':'Leuko','p06labbe15_690':'CRP','p06labbe15_695':'Ureum','p06labbe15_700':'Creat','p06labbe15_705':'ASAT','p06labbe15_715':'ALAT','p06labbe15_814':'25OH D','p06labbe15_815':'PTH','p06labbe15_772':'TSH','p06labbe15_816':'Osteo','p06labbe15_818':'Ctx','p06labbe15_777':'Homocysteïne'})
df_p06labbe16 = df_p06labbe16.rename(columns={'p06labbe16_date': 'Date','p06labbe16_tri':'Trigly','p06labbe16_cho':'Chol','p06labbe16_hdl':'HDL','p06labbe16_ldl':'LDL','p06labbe16_glu':'Gluc','p06labbe16_hb':'HbA1c','p06labbe16_pro':'Prolac','p06labbe16_685':'Leuko','p06labbe16_690':'CRP','p06labbe16_695':'Ureum','p06labbe16_700':'Creat','p06labbe16_705':'ASAT','p06labbe16_715':'ALAT','p06labbe16_814':'25OH D','p06labbe16_815':'PTH','p06labbe16_772':'TSH','p06labbe16_816':'Osteo','p06labbe16_818':'Ctx','p06labbe16_777':'Homocysteïne'})
df_p06labbe18 = df_p06labbe18.rename(columns={'p06labbe18_date': 'Date','p06labbe18_tri':'Trigly','p06labbe18_cho':'Chol','p06labbe18_hdl':'HDL','p06labbe18_ldl':'LDL','p06labbe18_glu':'Gluc','p06labbe18_hb':'HbA1c','p06labbe18_pro':'Prolac','p06labbe18_685':'Leuko','p06labbe18_690':'CRP','p06labbe18_695':'Ureum','p06labbe18_700':'Creat','p06labbe18_705':'ASAT','p06labbe18_715':'ALAT','p06labbe18_814':'25OH D','p06labbe18_815':'PTH','p06labbe18_772':'TSH','p06labbe18_816':'Osteo','p06labbe18_818':'Ctx','p06labbe18_777':'Homocysteïne'})

# Sorting data to only keep first measurements available for every patient_id
df_p06labbe13['Date'] = pd.to_datetime(df_p06labbe13['Date'], format='%d-%m-%Y %H:%M:%S')
df_p06labbe13 = df_p06labbe13.sort_values(by="Date") 
df_p06labbe13 = df_p06labbe13.drop_duplicates("patient_id", keep='first')
df_p06labbe14['Date'] = pd.to_datetime(df_p06labbe14['Date'], format='%d-%m-%Y %H:%M:%S')
df_p06labbe14 = df_p06labbe14.sort_values(by="Date") 
df_p06labbe14 = df_p06labbe14.drop_duplicates("patient_id", keep='first')
df_p06labbe15['Date'] = pd.to_datetime(df_p06labbe15['Date'], format='%d-%m-%Y %H:%M:%S')
df_p06labbe15 = df_p06labbe15.sort_values(by="Date") 
df_p06labbe15 = df_p06labbe15.drop_duplicates("patient_id", keep='first')
df_p06labbe16['Date'] = pd.to_datetime(df_p06labbe16['Date'], format='%d-%m-%Y %H:%M:%S')
df_p06labbe16 = df_p06labbe16.sort_values(by="Date") 
df_p06labbe16 = df_p06labbe16.drop_duplicates("patient_id", keep='first')
df_p06labbe18['Date'] = pd.to_datetime(df_p06labbe18['Date'], format='%d-%m-%Y %H:%M:%S')
df_p06labbe18 = df_p06labbe18.sort_values(by="Date") 
df_p06labbe18 = df_p06labbe18.drop_duplicates("patient_id", keep='first')

df_p06labbe_merge = df_p06labbe13.merge(df_p06labbe14, on='patient_id', how='outer', suffixes=('13', '14'))
df_p06labbe_merge = df_p06labbe_merge.merge(df_p06labbe15, on='patient_id', how='outer', suffixes=('', '15'))
df_p06labbe_merge = df_p06labbe_merge.merge(df_p06labbe16, on='patient_id', how='outer', suffixes=('15', '16'))
df_p06labbe_merge = df_p06labbe_merge.merge(df_p06labbe18, on='patient_id', how='outer', suffixes=('16', '18'))
df_p06labbe_merger = df_p06labbe_merge.replace('>', '', regex=True).replace('<', '', regex=True)

# Only keep the first measurement available which is not NaN 
df_p06labbe_merger["Trigly_all"] = df_p06labbe_merger.apply(lambda x: replace_missing(x['Trigly13'], x["Trigly14"], x['Trigly15'], x["Trigly16"], x["Trigly"]), axis = 1)
df_p06labbe_merger["Chol_all"] = df_p06labbe_merger.apply(lambda x: replace_missing(x['Chol13'], x["Chol14"], x['Chol15'], x["Chol16"], x["Chol"]), axis = 1)
df_p06labbe_merger["HDL_all"] = df_p06labbe_merger.apply(lambda x: replace_missing(x['HDL13'], x["HDL14"], x['HDL15'], x["HDL16"], x["HDL"]), axis = 1)
df_p06labbe_merger["LDL_all"] = df_p06labbe_merger.apply(lambda x: replace_missing(x['LDL13'], x["LDL14"], x['LDL15'], x["LDL16"], x["LDL"]), axis = 1)
df_p06labbe_merger["Gluc_all"] = df_p06labbe_merger.apply(lambda x: replace_missing(x['Gluc13'], x["Gluc14"], x['Gluc15'], x["Gluc16"], x["Gluc"]), axis = 1)
df_p06labbe_merger["HbA1c_all"] = df_p06labbe_merger.apply(lambda x: replace_missing(x['HbA1c13'], x["HbA1c14"], x['HbA1c15'], x["HbA1c16"], x["HbA1c"]), axis = 1)
df_p06labbe_merger["Prolac_all"] = df_p06labbe_merger.apply(lambda x: replace_missing(x['Prolac13'], x["Prolac14"], x['Prolac15'], x["Prolac16"], x["Prolac"]), axis = 1)
df_p06labbe_merger["Leuko_all"] = df_p06labbe_merger.apply(lambda x: replace_missing(x['Leuko13'], x["Leuko14"], x['Leuko15'], x["Leuko16"], x["Leuko"]), axis = 1)
df_p06labbe_merger["CRP_all"] = df_p06labbe_merger.apply(lambda x: replace_missing(x['CRP13'], x["CRP14"], x['CRP15'], x["CRP16"], x["CRP"]), axis = 1)
df_p06labbe_merger["Ureum_all"] = df_p06labbe_merger.apply(lambda x: replace_missing(x['Ureum13'], x["Ureum14"], x['Ureum15'], x["Ureum16"], x["Ureum"]), axis = 1)
df_p06labbe_merger["Creat_all"] = df_p06labbe_merger.apply(lambda x: replace_missing(x['Creat13'], x["Creat14"], x['Creat15'], x["Creat16"], x["Creat"]), axis = 1)
df_p06labbe_merger["ASAT_all"] = df_p06labbe_merger.apply(lambda x: replace_missing(x['ASAT13'], x["ASAT14"], x['ASAT15'], x["ASAT16"], x["ASAT"]), axis = 1)
df_p06labbe_merger["ALAT_all"] = df_p06labbe_merger.apply(lambda x: replace_missing(x['ALAT13'], x["ALAT14"], x['ALAT15'], x["ALAT16"], x["ALAT"]), axis = 1)
df_p06labbe_merger["25OH_D_all"] = df_p06labbe_merger.apply(lambda x: replace_missing(x['25OH D13'], x["25OH D14"], x['25OH D15'], x["25OH D16"], x["25OH D"]), axis = 1)
df_p06labbe_merger["PTH_all"] = df_p06labbe_merger.apply(lambda x: replace_missing(x['PTH13'], x["PTH14"], x['PTH15'], x["PTH16"], x["PTH"]), axis = 1)
df_p06labbe_merger["TSH_all"] = df_p06labbe_merger.apply(lambda x: replace_missing(x['TSH13'], x["TSH14"], x['TSH15'], x["TSH16"], x["TSH"]), axis = 1)
df_p06labbe_merger["Osteo_all"] = df_p06labbe_merger.apply(lambda x: replace_missing(x['Osteo13'], x["Osteo14"], x['Osteo15'], x["Osteo16"], x["Osteo"]), axis = 1)
df_p06labbe_merger["Ctx_all"] = df_p06labbe_merger.apply(lambda x: replace_missing(x['Ctx13'], x["Ctx14"], x['Ctx15'], x["Ctx16"], x["Ctx"]), axis = 1)
df_p06labbe_merger["Homocysteïne_all"] = df_p06labbe_merger.apply(lambda x: replace_missing(x['Homocysteïne13'], x["Homocysteïne14"], x['Homocysteïne15'], x["Homocysteïne16"], x["Homocysteïne"]), axis = 1)


#Remove individual columns
df_p06labbe = df_p06labbe_merger[['patient_id','Trigly_all','Chol_all','HDL_all','LDL_all','Gluc_all','HbA1c_all','Prolac_all','Leuko_all','CRP_all','Ureum_all','Creat_all','ASAT_all','ALAT_all','25OH_D_all','PTH_all','TSH_all','Osteo_all','Ctx_all','Homocysteïne_all']]

#Create a file containing the relevant variables 
df_p06labbe.to_csv('df_p06labbe.csv')